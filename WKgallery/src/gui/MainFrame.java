/*
 * MainFrame.java
 *
 * Created on 22 gennaio 2008, 10.43
 */
package gui;

import abstractlayer.Artista;
import abstractlayer.Cliente;
import abstractlayer.Fattura;
import abstractlayer.Opera;
import abstractlayer.Regione;
import daorules.ClienteDAO;
import daorules.*;
import javax.swing.event.TableModelEvent;
import temporarymain.*;
import exceptions.ArchivioNonTrovatoException;
import exceptions.BadFormatException;
import exceptions.ChiavePrimariaException;
import exceptions.RecordCorrelatoException;
import exceptions.RecordGiaPresenteException;
import exceptions.RecordNonPresenteException;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import msaccessimpl.MSAccessArtistaDAO;
import msaccessimpl.MSAccessClienteDAO;
import msaccessimpl.MSAccessDAOFactory;
import msaccessimpl.MSAccessFatturaDAO;
import msaccessimpl.MSAccessOperaDAO;
import temporarymain.MSAccessMain;
import utilities.EMail;

/**
 *
 * @author  Mir1
 */
public class MainFrame extends javax.swing.JFrame {

    /* necessari per la connessione con il DB*/
    Connection connection;
    String cod;
    ArtistaDAO artistaDAO;
    ClienteDAO clienteDAO;
    FatturaDAO fatturaDAO;
    OperaDAO operaDAO;
    String ColumnsCli[] = {"ID", "Cognome / Rag.Soc", "Nome / Rag.Soc. 2", "Indirizzo", "N° Civico", "Città", "Provincia", "regione", "Stato", "Tel1", "Tel2", "Cell1", "Cell2", "Mail1", "Mail2", "CF / P.IVA", "Note"};
    DefaultTableModel modelCli;

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        DAOFactory factoryDAO =
                (MSAccessDAOFactory) DAOFactory.getDAOFactory(DAOFactory.MSACCESS);
        try {
            connection = factoryDAO.getConnection();
        } catch (ArchivioNonTrovatoException ante) {
            System.err.println(ante);
        }
        // Create DAOs
        clienteDAO = factoryDAO.getClienteDAO();
        artistaDAO = factoryDAO.getArtistaDAO();
        fatturaDAO = factoryDAO.getFatturaDAO();
        operaDAO = factoryDAO.getOperaDAO();
        
        modelCli = new DefaultTableModel();
        fillTab1();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane1.addTab("Clienti", jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /*funzione per popolare la tabella del tab clienti */
    public void fillTab1() {
        modelCli.addColumn(ColumnsCli);
        Vector<Cliente> c = clienteDAO.findAllClienti();
        Iterator it = c.iterator();
        while (it.hasNext()) {
            Cliente r = (Cliente) it.next();
            Object[] s = {r.getCodiceCliente(), r.getCognRsoc1(), r.getNomeRsoc2(), r.getIndirizzo(), r.getNCiv(), r.getCitta(), r.getProvincia(), r.getRegione(), r.getStato(), r.getTel1(), r.getTel2(), r.getCell1(), r.getCell2(), r.getMail1(), r.getMail2(), r.getCfPiva(), r.getNote()};
            modelCli.addRow(s);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
